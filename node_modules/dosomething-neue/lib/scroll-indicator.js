"use strict";

var _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };

/**
 * Indicates current section in nav on scroll. Applies an `.is-active`
 * class when the specified `href` reaches the top of the viewport.
 *
 * Triggered by a `.js-scroll-indicator` on a link.
 */

var $ = _interopRequire(require("jquery"));

var throttle = _interopRequire(require("lodash/function/throttle"));

var sortedIndex = _interopRequire(require("lodash/array/sortedIndex"));

var oldIndicator = undefined;
var offsets = [];
var links = [];

/**
 * Prepare all `.js-scroll-indicator` links on the page.
 */
function preparePage() {
  offsets = [];
  links = [];

  $(".js-scroll-indicator").find("a").each(function (index, el) {
    var $link = $(el);
    // Calculate the element's offset from the top of the page while anchored
    var $linkTarget = $($link.attr("href"));
    if ($linkTarget.length) {
      // Add jQuery object and offset value to link map
      offsets.push($linkTarget.offset().top);
      links.push($link);
    }
  });
}

/**
 * Scroll handler to highlight the link the user is currently reading.
 */
function updateScrollIndicators() {
  // @NOTE: We use a 40px offset to trigger indicator slightly after scroll position
  // (so that nav switches closer to where a user will likely be reading the text)
  var offsetIndex = sortedIndex(offsets, $(window).scrollTop() + 40);
  var newIndicator = links[offsetIndex];

  if (newIndicator) {
    var newIndicatorParents = newIndicator.parentsUntil(".js-scroll-indicator");

    if (oldIndicator && oldIndicator !== newIndicator) {
      var oldIndicatorParents = oldIndicator.parentsUntil(".js-scroll-indicator").not(newIndicatorParents);
      oldIndicatorParents.removeClass("is-active");
      oldIndicator.removeClass("is-active");
    }

    newIndicator.addClass("is-active");
    newIndicatorParents.addClass("is-active");

    oldIndicator = newIndicator;
  }
}

/**
 * Attach event listeners and prepare link references on load.
 */
$(document).ready(function () {
  preparePage();

  var throttledScroll = throttle(updateScrollIndicators, 60);

  $(window).on("scroll", throttledScroll);
  $(window).on("resize", preparePage);
});